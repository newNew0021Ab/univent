import { useState } from "react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Switch } from "@/components/ui/switch";
import { Label } from "@/components/ui/label";
import { Badge } from "@/components/ui/badge";
import { Bell, Calendar, MapPin, Users, ArrowLeft, Check } from "lucide-react";
import { Link } from "react-router-dom";
import { toast } from "sonner";

const Notifications = () => {
  const [subscriptions, setSubscriptions] = useState({
    science: true,
    sport: false,
    culture: true,
    career: false,
    volunteer: false,
  });

  const notifications = [
    {
      id: 1,
      title: "–ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ: –ù–∞—É—á–Ω–∞—è –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è",
      description: "–ü—Ä–∏–≥–ª–∞—à–∞–µ–º –≤–∞—Å –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –µ–∂–µ–≥–æ–¥–Ω–æ–π –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏",
      category: "–ù–∞—É–∫–∞",
      time: "2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥",
      read: false,
    },
    {
      id: 2,
      title: "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –ö–æ–Ω—Ü–µ—Ä—Ç —á–µ—Ä–µ–∑ 2 –¥–Ω—è",
      description: "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–π –∫–æ–Ω—Ü–µ—Ä—Ç",
      category: "–ö—É–ª—å—Ç—É—Ä–∞",
      time: "5 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥",
      read: false,
    },
    {
      id: 3,
      title: "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞—Ç—ã: –ö–∞—Ä—å–µ—Ä–Ω—ã–π –¥–µ–Ω—å",
      description: "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ –Ω–∞ 30 –º–∞—Ä—Ç–∞",
      category: "–ö–∞—Ä—å–µ—Ä–∞",
      time: "1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥",
      read: true,
    },
  ];

  const handleSubscriptionChange = (category: keyof typeof subscriptions) => {
    setSubscriptions((prev) => ({
      ...prev,
      [category]: !prev[category],
    }));
    
    toast.success(
      subscriptions[category] 
        ? "–í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π" 
        : "–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
    );
  };

  return (
    <div className="min-h-screen bg-background pb-20 md:pb-8">
      <div className="container mx-auto px-4 py-8 max-w-4xl">
        <Link to="/" className="inline-flex items-center gap-2 text-muted-foreground hover:text-foreground mb-6">
          <ArrowLeft className="h-4 w-4" />
          –ù–∞–∑–∞–¥
        </Link>

        {/* Subscription Settings */}
        <Card className="mb-6">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Bell className="h-5 w-5" />
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫
            </CardTitle>
            <CardDescription>
              –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π, –æ –∫–æ—Ç–æ—Ä—ã—Ö —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            {[
              { id: "science", label: "–ù–∞—É–∫–∞", icon: "üî¨" },
              { id: "sport", label: "–°–ø–æ—Ä—Ç", icon: "‚öΩ" },
              { id: "culture", label: "–ö—É–ª—å—Ç—É—Ä–∞", icon: "üé≠" },
              { id: "career", label: "–ö–∞—Ä—å–µ—Ä–∞", icon: "üíº" },
              { id: "volunteer", label: "–í–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–æ", icon: "‚ù§Ô∏è" },
            ].map((category) => (
              <div key={category.id} className="flex items-center justify-between py-2">
                <Label htmlFor={category.id} className="flex items-center gap-2 cursor-pointer">
                  <span className="text-2xl">{category.icon}</span>
                  <span className="font-medium">{category.label}</span>
                </Label>
                <Switch
                  id={category.id}
                  checked={subscriptions[category.id as keyof typeof subscriptions]}
                  onCheckedChange={() => handleSubscriptionChange(category.id as keyof typeof subscriptions)}
                />
              </div>
            ))}
          </CardContent>
        </Card>

        {/* Notifications List */}
        <Card>
          <CardHeader>
            <div className="flex items-center justify-between">
              <CardTitle>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</CardTitle>
              <Button variant="ghost" size="sm">
                <Check className="h-4 w-4 mr-2" />
                –ü—Ä–æ—á–∏—Ç–∞—Ç—å –≤—Å–µ
              </Button>
            </div>
          </CardHeader>
          <CardContent className="space-y-4">
            {notifications.map((notification) => (
              <div
                key={notification.id}
                className={`p-4 rounded-lg border transition-colors ${
                  notification.read
                    ? "bg-muted/30 border-border"
                    : "bg-card border-primary/20 shadow-sm"
                }`}
              >
                <div className="flex items-start justify-between gap-4">
                  <div className="flex-1">
                    <div className="flex items-center gap-2 mb-1">
                      <Badge variant="outline" className="text-xs">
                        {notification.category}
                      </Badge>
                      {!notification.read && (
                        <div className="h-2 w-2 rounded-full bg-primary" />
                      )}
                    </div>
                    <h3 className="font-semibold mb-1">{notification.title}</h3>
                    <p className="text-sm text-muted-foreground mb-2">
                      {notification.description}
                    </p>
                    <p className="text-xs text-muted-foreground">
                      {notification.time}
                    </p>
                  </div>
                  <Button variant="ghost" size="sm">
                    –ü–µ—Ä–µ–π—Ç–∏
                  </Button>
                </div>
              </div>
            ))}
          </CardContent>
        </Card>

        {/* Example notification preview */}
        <Card className="mt-6 border-primary/50">
          <CardHeader>
            <CardTitle className="text-lg">–ü—Ä–∏–º–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</CardTitle>
            <CardDescription>
              –¢–∞–∫ –±—É–¥—É—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ –≤–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="bg-card rounded-lg shadow-lg border border-border p-4 max-w-sm">
              <div className="flex items-start gap-3">
                <div className="bg-primary rounded-full p-2">
                  <Bell className="h-4 w-4 text-white" />
                </div>
                <div className="flex-1">
                  <div className="font-semibold text-sm mb-1">UNIVENT</div>
                  <div className="text-sm font-medium mb-1">
                    –ù–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ: –ù–∞—É—á–Ω–∞—è –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è
                  </div>
                  <div className="text-xs text-muted-foreground">
                    15 –º–∞—Ä—Ç–∞ –≤ 10:00 ‚Ä¢ –ì–ª–∞–≤–Ω—ã–π –∫–æ—Ä–ø—É—Å
                  </div>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default Notifications;
